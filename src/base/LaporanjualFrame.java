/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package base;

import java.awt.BorderLayout;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javafx.scene.paint.Color;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Pramudya
 */
public class LaporanjualFrame extends javax.swing.JFrame {

    /**
     * Creates new form LaporanjualFrame
     */
    public LaporanjualFrame() {
        initComponents();
        this.btn_about.setBackground(new java.awt.Color(0,0,0,0));
        this.btn_dashboard.setBackground(new java.awt.Color(0,0,0,0));
        this.btn_dtpembeli.setBackground(new java.awt.Color(0,0,0,0));
        this.btn_dtsupplier.setBackground(new java.awt.Color(0,0,0,0));
        this.btn_transbeli.setBackground(new java.awt.Color(0,0,0,0));
        this.btn_transjual.setBackground(new java.awt.Color(0,0,0,0));
        this.btn_dtakun.setBackground(new java.awt.Color(0,0,0,0));
        this.btn_logout.setBackground(new java.awt.Color(0,0,0,0));
        this.btn_about.setBackground(new java.awt.Color(0,0,0,0));
        this.btn_dtbarang.setBackground(new java.awt.Color(0,0,0,0));
        this.btn_laporansaja.setBackground(new java.awt.Color(0,0,0,0));
        this.combobox_bulan.setSelectedItem(null);
        this.combobox_tahun.setSelectedItem(null);
        showName();
        tampilDateSekarang();
        showLineChart();
        showLineChartIntensity();
        showBarChartHasil();
    }
    
    private void showName(){
         try {
            String sql = "SELECT * FROM session_login WHERE kode_sesi = 1";
            Connection c = (Connection) koneksi.configDB();
            Statement s = c.createStatement();
            ResultSet r = s.executeQuery(sql);
            if(r.next()){
                String namaAkun = r.getString("nama");
                this.label_nama.setText(namaAkun);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabel_detailtrans = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel_catatantrans = new javax.swing.JTable();
        datechooserakhir = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        datechooserfix = new com.toedter.calendar.JDateChooser();
        datechooserawal = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btn_harisekarang = new javax.swing.JButton();
        btn_findrangetgl = new javax.swing.JButton();
        btn_findtgl = new javax.swing.JButton();
        label_namacus = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabel_buldetail = new javax.swing.JTable();
        combobox_tahun = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        combobox_bulan = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabel_bulcatatantrans = new javax.swing.JTable();
        label_namacusbulan = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        panelLineIntensity = new javax.swing.JPanel();
        panelLineChart = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        panelAnalisisHasil = new javax.swing.JPanel();
        btn_laporansaja = new javax.swing.JButton();
        btn_dashboard = new javax.swing.JButton();
        btn_dtsupplier = new javax.swing.JButton();
        btn_dtpembeli = new javax.swing.JButton();
        label_nama = new javax.swing.JLabel();
        btn_dtbarang = new javax.swing.JButton();
        btn_dtakun = new javax.swing.JButton();
        btn_transjual = new javax.swing.JButton();
        btn_transbeli = new javax.swing.JButton();
        btn_about = new javax.swing.JButton();
        btn_logout = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabel_detailtrans.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "kode_barang", "nama_barang", "jumlah", "harga", "total"
            }
        ));
        tabel_detailtrans.setRowHeight(22);
        jScrollPane2.setViewportView(tabel_detailtrans);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 540, 200));

        tabel_catatantrans.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "kode_penjualan", "kode_pelanggan", "tanggal", "total"
            }
        ));
        tabel_catatantrans.setRowHeight(25);
        tabel_catatantrans.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabel_catatantransMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel_catatantrans);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 540, 180));
        jPanel1.add(datechooserakhir, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 40, 130, 30));

        jLabel2.setText("Tanggal Akhir");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, -1, -1));
        jPanel1.add(datechooserfix, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 130, 30));
        jPanel1.add(datechooserawal, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 40, 130, 30));

        jLabel4.setText("Tanggal Awal");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, -1, -1));

        jLabel5.setText("Pilih Tanggal");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Catatan Transaksi Jual");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 490, -1));

        btn_harisekarang.setText("Hari ini");
        btn_harisekarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_harisekarangActionPerformed(evt);
            }
        });
        jPanel1.add(btn_harisekarang, new org.netbeans.lib.awtextra.AbsoluteConstraints(466, 290, 70, 30));

        btn_findrangetgl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/search (1).png"))); // NOI18N
        btn_findrangetgl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_findrangetglActionPerformed(evt);
            }
        });
        jPanel1.add(btn_findrangetgl, new org.netbeans.lib.awtextra.AbsoluteConstraints(525, 38, 35, 35));

        btn_findtgl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/search (1).png"))); // NOI18N
        btn_findtgl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_findtglActionPerformed(evt);
            }
        });
        jPanel1.add(btn_findtgl, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 38, 35, 35));

        label_namacus.setText("Nama Pelanggan");
        jPanel1.add(label_namacus, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 120, -1));

        jTabbedPane1.addTab("Laporan Harian", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabel_buldetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "kode barang", "nama barang", "jumlah", "harga", "total"
            }
        ));
        tabel_buldetail.setRowHeight(22);
        jScrollPane4.setViewportView(tabel_buldetail);

        jPanel2.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 540, 180));

        combobox_tahun.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Pilih Tahun --", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "-------" }));
        combobox_tahun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combobox_tahunActionPerformed(evt);
            }
        });
        jPanel2.add(combobox_tahun, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 20, -1, -1));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel7.setText("Cari Tahun :");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, -1, -1));

        combobox_bulan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Pilih Bulan --", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        combobox_bulan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combobox_bulanActionPerformed(evt);
            }
        });
        jPanel2.add(combobox_bulan, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setText("Cari Bulan :");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jButton1.setText("Cari");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, 70, -1));

        tabel_bulcatatantrans.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "kode penjualan", "kode pelanggan", "tanggal", "total"
            }
        ));
        tabel_bulcatatantrans.setRowHeight(25);
        tabel_bulcatatantrans.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabel_bulcatatantransMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabel_bulcatatantrans);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 540, 250));

        label_namacusbulan.setText("Nama Pelanggan");
        jPanel2.add(label_namacusbulan, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 110, -1));

        jTabbedPane1.addTab("Laporan Bulanan", jPanel2);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelLineIntensity.setBackground(new java.awt.Color(255, 153, 204));
        panelLineIntensity.setLayout(new javax.swing.BoxLayout(panelLineIntensity, javax.swing.BoxLayout.LINE_AXIS));
        jPanel3.add(panelLineIntensity, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 500, 230));

        panelLineChart.setBackground(new java.awt.Color(255, 153, 204));
        panelLineChart.setLayout(new javax.swing.BoxLayout(panelLineChart, javax.swing.BoxLayout.LINE_AXIS));
        jPanel3.add(panelLineChart, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 500, 230));

        jTabbedPane1.addTab("Analisis Pemasukan", jPanel3);

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelAnalisisHasil.setBackground(new java.awt.Color(255, 0, 255));
        panelAnalisisHasil.setLayout(new javax.swing.BoxLayout(panelAnalisisHasil, javax.swing.BoxLayout.LINE_AXIS));
        jPanel4.add(panelAnalisisHasil, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 500, 450));

        jTabbedPane1.addTab("Analisis Hasil", jPanel4);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 50, 580, 600));

        btn_laporansaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_laporansajaActionPerformed(evt);
            }
        });
        getContentPane().add(btn_laporansaja, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 500, 300, 40));

        btn_dashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_dashboardActionPerformed(evt);
            }
        });
        getContentPane().add(btn_dashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 300, 40));

        btn_dtsupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_dtsupplierActionPerformed(evt);
            }
        });
        getContentPane().add(btn_dtsupplier, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 251, 300, 40));

        btn_dtpembeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_dtpembeliActionPerformed(evt);
            }
        });
        getContentPane().add(btn_dtpembeli, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 293, 300, 40));

        label_nama.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        label_nama.setForeground(new java.awt.Color(0, 0, 0));
        label_nama.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_nama.setText("Nama");
        getContentPane().add(label_nama, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 280, 30));

        btn_dtbarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_dtbarangActionPerformed(evt);
            }
        });
        getContentPane().add(btn_dtbarang, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 340, 300, 40));

        btn_dtakun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_dtakunActionPerformed(evt);
            }
        });
        getContentPane().add(btn_dtakun, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, 300, 40));

        btn_transjual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_transjualActionPerformed(evt);
            }
        });
        getContentPane().add(btn_transjual, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 420, 300, 40));

        btn_transbeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_transbeliActionPerformed(evt);
            }
        });
        getContentPane().add(btn_transbeli, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 460, 300, 40));

        btn_about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_aboutActionPerformed(evt);
            }
        });
        getContentPane().add(btn_about, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 540, 300, 40));

        btn_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_logoutActionPerformed(evt);
            }
        });
        getContentPane().add(btn_logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 580, 300, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/LaporanPenjualan.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_dashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_dashboardActionPerformed
        new DashboardFrame().setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_dashboardActionPerformed

    private void btn_dtsupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_dtsupplierActionPerformed
        new DatasupplierFrame().setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_dtsupplierActionPerformed

    private void btn_dtpembeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_dtpembeliActionPerformed
        new NewDatapembeliFrame().setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_dtpembeliActionPerformed

    private void btn_dtbarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_dtbarangActionPerformed
        new DatabarangFrame().setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_dtbarangActionPerformed

    private void btn_dtakunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_dtakunActionPerformed
        if ("administrator".equals(label_nama.getText())){
            new adminDatauserFrame().setVisible(true);
            dispose();
        }else{
            new DatauserFrame().setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_btn_dtakunActionPerformed

    private void btn_transjualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_transjualActionPerformed
        new JualFrame().setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_transjualActionPerformed

    private void btn_transbeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_transbeliActionPerformed
        new TransaksibeliFrame().setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_transbeliActionPerformed

    private void btn_aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_aboutActionPerformed
        new TentangkamiFrame().setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_aboutActionPerformed

    private void btn_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_logoutActionPerformed
        new LoginFrame().setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_logoutActionPerformed

    private void btn_findtglActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_findtglActionPerformed
        
        String[] columnNames = {"kode_penjualan", "kode_pelanggan", "tanggal", "total"};
        DefaultTableModel tablemodel = new DefaultTableModel(columnNames, 0);
         
         SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
         String dateTrans = sdf.format(datechooserfix.getDate());
         
        try {
            Connection c = (Connection) koneksi.configDB();
            Statement s = c.createStatement();
            ResultSet rs = s.executeQuery("SELECT * FROM penjualan WHERE tgl_penjualan LIKE '" + dateTrans + "%' ");
            
            while(rs.next()) {
                String idPenjualan = rs.getString("kode_penjualan"),
                            idPelanggan = rs.getString("kode_pelanggan"),
                            tglPenjualan = rs.getString("tgl_penjualan"),
                            totPenjualan = rs.getString("total");
                            
                
                // create a single array of one rows worth of data
                String[] data = {idPenjualan, idPelanggan, tglPenjualan, totPenjualan};
                tablemodel.addRow(data);
                
            }
        this.tabel_catatantrans.setModel(tablemodel);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error : " + ex.getMessage());
        }
    }//GEN-LAST:event_btn_findtglActionPerformed

    private void showLineChart(){
        // get value how much transaction sell has done
            
            String arrTgl[] = new String[7];
            int arrJumlah[] = new int[7];
         try {
            Connection c = (Connection) koneksi.configDB();
            Statement s = c.createStatement();
            ResultSet rs = s.executeQuery("SELECT DATE(tgl_penjualan) AS tanggal, COUNT(kode_penjualan) AS jumlah_transaksi, DAY(tgl_penjualan) AS haritgl, MONTH(tgl_penjualan) AS motgl \n" +
"FROM `penjualan` getLastRecord\n" +
"GROUP BY tanggal\n" +
"ORDER BY `kode_penjualan` DESC  LIMIT 7");
            
            
            int i = 0;
            while (rs.next()) {
                String idJumlah = rs.getString("jumlah_transaksi"),
                        tglTrans = rs.getString("haritgl"),
                        mntTrans = rs.getString("motgl");
                arrJumlah[i] = Integer.parseInt(idJumlah);
                arrTgl[i] = tglTrans + "/" + mntTrans;
                i++;
            }
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error : " + ex.getMessage());
        }
        //create dataset for the graph
         DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.setValue(arrJumlah[6], "Amount", arrTgl[6]);
        dataset.setValue(arrJumlah[5], "Amount", arrTgl[5]);
        dataset.setValue(arrJumlah[4], "Amount", arrTgl[4]);
        dataset.setValue(arrJumlah[3], "Amount", arrTgl[3]);
        dataset.setValue(arrJumlah[2], "Amount", arrTgl[2]);
        dataset.setValue(arrJumlah[1], "Amount", arrTgl[1]);
        dataset.setValue(arrJumlah[0], "Amount", arrTgl[0]);
        
        //create chart
        JFreeChart linechart; 
        linechart = ChartFactory.createLineChart("grafik jumlah transaksi","harian","jumlah", 
                dataset, PlotOrientation.VERTICAL, false,true,false);
        
        //create plot object
         CategoryPlot lineCategoryPlot;
        lineCategoryPlot = linechart.getCategoryPlot();
       // lineCategoryPlot.setRangeGridlinePaint(Color.BLUE);
        lineCategoryPlot.setBackgroundPaint(java.awt.Color.WHITE);
        
        //create render object to change the moficy the line properties like color
        LineAndShapeRenderer lineRenderer = (LineAndShapeRenderer) lineCategoryPlot.getRenderer();
//        Color lineChartColor;
//        lineChartColor = new Color(204,0,51);
        lineRenderer.setSeriesPaint(0, java.awt.Color.BLACK);
        
         //create chartPanel to display chart(graph)
        ChartPanel lineChartPanel = new ChartPanel(linechart);
        panelLineChart.removeAll();
        panelLineChart.add(lineChartPanel, BorderLayout.CENTER);
        panelLineChart.validate();
    }
    
    private void showLineChartIntensity(){
        // get value how much transaction sell has done
            String arrTgl[] = new String[7];
            int arrJumlah[] = new int[7];
        try {
            Connection c = (Connection) koneksi.configDB();
            Statement s = c.createStatement();
            ResultSet rs = s.executeQuery("SELECT SUM(tr_penjualan_detail.jumlah) AS banyak_barang, DATE(penjualan.tgl_penjualan) AS tanggal, DAY(tgl_penjualan) AS haritgl, MONTH(tgl_penjualan) AS motgl \n"
                    + "FROM `penjualan` JOIN `tr_penjualan_detail`\n"
                    + "WHERE penjualan.kode_penjualan = tr_penjualan_detail.kode_penjualan\n"
                    + "GROUP BY tanggal \n"
                    + "ORDER BY penjualan.kode_penjualan DESC LIMIT 7");

            int i = 0;
            while (rs.next()) {
                String idJumlah = rs.getString("banyak_barang"),
                        tglTrans = rs.getString("haritgl"),
                        mntTrans = rs.getString("motgl");
                arrJumlah[i] = Integer.parseInt(idJumlah);
                arrTgl[i] = tglTrans + "/" + mntTrans;
                i++;
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error : " + ex.getMessage());
        }
        //create dataset for the graph
         DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.setValue(arrJumlah[6], "Amount", arrTgl[6]);
        dataset.setValue(arrJumlah[5], "Amount", arrTgl[5]);
        dataset.setValue(arrJumlah[4], "Amount", arrTgl[4]);
        dataset.setValue(arrJumlah[3], "Amount", arrTgl[3]);
        dataset.setValue(arrJumlah[2], "Amount", arrTgl[2]);
        dataset.setValue(arrJumlah[1], "Amount", arrTgl[1]);
        dataset.setValue(arrJumlah[0], "Amount", arrTgl[0]);
        
        //create chart
        JFreeChart linechart; 
        linechart = ChartFactory.createLineChart("grafik intensitas barang","harian","jumlah", 
                dataset, PlotOrientation.VERTICAL, false,true,false);
        
        //create plot object
         CategoryPlot lineCategoryPlot;
        lineCategoryPlot = linechart.getCategoryPlot();
       // lineCategoryPlot.setRangeGridlinePaint(Color.BLUE);
        lineCategoryPlot.setBackgroundPaint(java.awt.Color.WHITE);
        
        //create render object to change the moficy the line properties like color
        LineAndShapeRenderer lineRenderer = (LineAndShapeRenderer) lineCategoryPlot.getRenderer();
//        Color lineChartColor;
//        lineChartColor = new Color(204,0,51);
        lineRenderer.setSeriesPaint(0, java.awt.Color.RED);
        
         //create chartPanel to display chart(graph)
        ChartPanel lineChartPanel = new ChartPanel(linechart);
        panelLineIntensity.removeAll();
        panelLineIntensity.add(lineChartPanel, BorderLayout.CENTER);
        panelLineIntensity.validate();
    }
    
    private void showBarChartHasil(){
        //create dataset for the graph
          String arrTgl[] = new String[7];
            int arrJumlah[] = new int[7];
        try {
            Connection c = (Connection) koneksi.configDB();
            Statement s = c.createStatement();
            ResultSet rs = s.executeQuery("SELECT SUM(total) AS harga, DATE(tgl_penjualan) AS tanggal, DAY(tgl_penjualan) AS haritgl, MONTH(tgl_penjualan) AS motgl\n" +
"FROM `penjualan` GROUP BY tanggal ORDER BY kode_penjualan DESC LIMIT 7");

            int i = 0;
            while (rs.next()) {
                String idJumlah = rs.getString("harga"),
                        tglTrans = rs.getString("haritgl"),
                        mntTrans = rs.getString("motgl");
                arrJumlah[i] = Integer.parseInt(idJumlah);
                arrTgl[i] = tglTrans + "/" + mntTrans;
                i++;
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error : " + ex.getMessage());
        }
        
         DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.setValue(arrJumlah[6], "Amount", arrTgl[6]);
        dataset.setValue(arrJumlah[5], "Amount", arrTgl[5]);
        dataset.setValue(arrJumlah[4], "Amount", arrTgl[4]);
        dataset.setValue(arrJumlah[3], "Amount", arrTgl[3]);
        dataset.setValue(arrJumlah[2], "Amount", arrTgl[2]);
        dataset.setValue(arrJumlah[1], "Amount", arrTgl[1]);
        dataset.setValue(arrJumlah[0], "Amount", arrTgl[0]);
        
        //create chart
        JFreeChart barchart;
        barchart = ChartFactory.createBarChart("jumlah pendapatan","harian","jumlah", 
                dataset, PlotOrientation.VERTICAL, false,true,false);
        
        //create plot object
         CategoryPlot barchrt;
        barchrt = barchart.getCategoryPlot();
       // lineCategoryPlot.setRangeGridlinePaint(Color.BLUE);
        barchrt.setRangeGridlinePaint(java.awt.Color.ORANGE);
        ChartPanel barPanel = new ChartPanel(barchart);
        
        panelAnalisisHasil.removeAll();
        panelAnalisisHasil.add(barPanel, BorderLayout.CENTER);
        panelAnalisisHasil.validate();
    }
    
    private void tabel_catatantransMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel_catatantransMouseClicked
        String selectedRow = this.tabel_catatantrans.getValueAt(tabel_catatantrans.getSelectedRow(), 0).toString();
        
        String[] columnNames = {"kode_barang", "nama_barang", "jumlah", "harga", "total"};
        DefaultTableModel tablemodel = new DefaultTableModel(columnNames, 0);
        
         try {
            Connection c = (Connection) koneksi.configDB();
            Statement s = c.createStatement();
            ResultSet rs = s.executeQuery("SELECT * FROM tr_penjualan_detail WHERE kode_penjualan = '" + selectedRow + "' ");
            
            while(rs.next()) {
                String idBarang = rs.getString("kode_barang"),
                            namaBarang = rs.getString("nama_barang"),
                            jumlahBarang = rs.getString("jumlah"),
                            hargaBarang = rs.getString("harga"),
                            totHarga = rs.getString("total");
                            
                
                // create a single array of one rows worth of data
                String[] data = {idBarang, namaBarang, jumlahBarang, hargaBarang, totHarga};
                tablemodel.addRow(data);
                
            }
        this.tabel_detailtrans.setModel(tablemodel);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error : " + ex.getMessage());
        }
         
         String selectedCust =  this.tabel_catatantrans.getValueAt(tabel_catatantrans.getSelectedRow(), 1).toString();
         // shot buyer to textfield buyer
          try{
            String sql = "SELECT nama FROM pelanggan WHERE kode_pelanggan = '" + selectedCust + "'";
            Connection c = (Connection) koneksi.configDB();
            Statement s = c.createStatement();
            ResultSet r = s.executeQuery(sql);
            
            // get data
            if (r.next()) {
                String namaPel = r.getString("nama");
                
                // menampilkan data
                this.label_namacus.setText(namaPel);
                
            } 
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this, "error : " + ex.getMessage());
        }
    }//GEN-LAST:event_tabel_catatantransMouseClicked

    private void btn_findrangetglActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_findrangetglActionPerformed
         String[] columnNames = {"kode_penjualan", "kode_pelanggan", "tanggal", "total"};
        DefaultTableModel tablemodel = new DefaultTableModel(columnNames, 0);
         
         SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
         
         String dateAwal = sdf.format(this.datechooserawal.getDate()) + " 00:00:00";
         String dateAkhir = sdf.format(this.datechooserakhir.getDate()) + " 23:59:59";
         
        try {
            Connection c = (Connection) koneksi.configDB();
            Statement s = c.createStatement();
            ResultSet rs = s.executeQuery("SELECT * FROM penjualan WHERE tgl_penjualan BETWEEN '" + dateAwal + "' AND '" + dateAkhir + "' ");
            
            while(rs.next()) {
                String idPenjualan = rs.getString("kode_penjualan"),
                            idPelanggan = rs.getString("kode_pelanggan"),
                            tglPenjualan = rs.getString("tgl_penjualan"),
                            totPenjualan = rs.getString("total");
                            
                
                // create a single array of one rows worth of data
                String[] data = {idPenjualan, idPelanggan, tglPenjualan, totPenjualan};
                tablemodel.addRow(data);
                
            }
        this.tabel_catatantrans.setModel(tablemodel);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error : " + ex.getMessage());
        }
    }//GEN-LAST:event_btn_findrangetglActionPerformed

    private void tampilDateSekarang(){
        Date harisekarang = new Date();
        SimpleDateFormat ft = new SimpleDateFormat ("yyyy-MM-dd");
        String nowDate = ft.format(harisekarang);
        
         String[] columnNames = {"kode_penjualan", "kode_pelanggan", "tanggal", "total"};
        DefaultTableModel tablemodel = new DefaultTableModel(columnNames, 0);
        
         try {
            Connection c = (Connection) koneksi.configDB();
            Statement s = c.createStatement();
            ResultSet rs = s.executeQuery("SELECT * FROM penjualan WHERE tgl_penjualan LIKE '" + nowDate + "%' ");
            
            while(rs.next()) {
                String idPenjualan = rs.getString("kode_penjualan"),
                            idPelanggan = rs.getString("kode_pelanggan"),
                            tglPenjualan = rs.getString("tgl_penjualan"),
                            totPenjualan = rs.getString("total");
                            
                
                // create a single array of one rows worth of data
                String[] data = {idPenjualan, idPelanggan, tglPenjualan, totPenjualan};
                tablemodel.addRow(data);
                
            }
        this.tabel_catatantrans.setModel(tablemodel);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error : " + ex.getMessage());
        }
    }
    
    private void btn_harisekarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_harisekarangActionPerformed
        tampilDateSekarang();
    }//GEN-LAST:event_btn_harisekarangActionPerformed

    private void combobox_bulanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combobox_bulanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combobox_bulanActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void combobox_tahunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combobox_tahunActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combobox_tahunActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Object selectedItemBulan =  combobox_bulan.getSelectedItem();
        String itembulan = "";
        String itmbln = selectedItemBulan.toString();
        switch(itmbln){
            case "January":
                itembulan = "01";
                break;
            case "February":
                itembulan = "02";
                break;
            case "March":
                itembulan = "03";
                break;
            case "April":
                itembulan = "04";
                break;
            case "May":
                itembulan = "05";
                break;
            case "June":
                itembulan = "06";
                break;
            case "July":
                itembulan = "07";
                break;
            case "August":
                itembulan = "08";
                break;
            case "September":
                itembulan = "09";
                break;
            case "October":
                itembulan = "10";
                break;
            case "November":
                itembulan = "11";
                break;
            case "December":
                itembulan = "12";
                break;
            default:
                System.out.println("unknown case");
        }
        
        Object selectedItemTahun =  combobox_tahun.getSelectedItem();
        String itemtahun = selectedItemTahun.toString();
        
        String[] columnNames = {"kode penjualan", "kode pelanggan", "tanggal", "total"};
        DefaultTableModel tablemodel = new DefaultTableModel(columnNames, 0);
         
             try {
                 Connection c = (Connection) koneksi.configDB();
                 Statement s = c.createStatement();
                 ResultSet rs = s.executeQuery("SELECT * FROM penjualan WHERE MONTH(tgl_penjualan) = '" + itembulan + "' AND year(tgl_penjualan) = '" + itemtahun + "' ");

                 while (rs.next()) {
                     String idPenjualan = rs.getString("kode_penjualan"),
                             idPelanggan = rs.getString("kode_pelanggan"),
                             tglPenjualan = rs.getString("tgl_penjualan"),
                             totPenjualan = rs.getString("total");

                     // create a single array of one rows worth of data
                     String[] data = {idPenjualan, idPelanggan, tglPenjualan, totPenjualan};
                     tablemodel.addRow(data);

                 }
                 this.tabel_bulcatatantrans.setModel(tablemodel);
             } catch (Exception ex) {
                 JOptionPane.showMessageDialog(this, "Error : " + ex.getMessage());
             }
        
         
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tabel_bulcatatantransMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel_bulcatatantransMouseClicked
        String selectedRow = this.tabel_bulcatatantrans.getValueAt(tabel_bulcatatantrans.getSelectedRow(), 0).toString();
        
        String[] columnNames = {"kode barang", "nama barang", "jumlah", "harga", "total"};
        DefaultTableModel tablemodel = new DefaultTableModel(columnNames, 0);
        
         try {
            Connection c = (Connection) koneksi.configDB();
            Statement s = c.createStatement();
            ResultSet rs = s.executeQuery("SELECT * FROM tr_penjualan_detail WHERE kode_penjualan = '" + selectedRow + "' ");
            
            while(rs.next()) {
                String idBarang = rs.getString("kode_barang"),
                            namaBarang = rs.getString("nama_barang"),
                            jumlahBarang = rs.getString("jumlah"),
                            hargaBarang = rs.getString("harga"),
                            totHarga = rs.getString("total");
                            
                
                // create a single array of one rows worth of data
                String[] data = {idBarang, namaBarang, jumlahBarang, hargaBarang, totHarga};
                tablemodel.addRow(data);
                
            }
        this.tabel_buldetail.setModel(tablemodel);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error : " + ex.getMessage());
        }
         
         String selectedCust =  this.tabel_bulcatatantrans.getValueAt(tabel_bulcatatantrans.getSelectedRow(), 1).toString();
         // shot buyer to textfield buyer
          try{
            String sql = "SELECT nama FROM pelanggan WHERE kode_pelanggan = '" + selectedCust + "'";
            Connection c = (Connection) koneksi.configDB();
            Statement s = c.createStatement();
            ResultSet r = s.executeQuery(sql);
            
            // get data
            if (r.next()) {
                String namaPel = r.getString("nama");
                
                // menampilkan data
                this.label_namacusbulan.setText(namaPel);
                
            } 
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this, "error : " + ex.getMessage());
        }
    }//GEN-LAST:event_tabel_bulcatatantransMouseClicked

    private void btn_laporansajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_laporansajaActionPerformed
        new LaporansajaFrame().setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_laporansajaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LaporanjualFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LaporanjualFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LaporanjualFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LaporanjualFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LaporanjualFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_about;
    private javax.swing.JButton btn_dashboard;
    private javax.swing.JButton btn_dtakun;
    private javax.swing.JButton btn_dtbarang;
    private javax.swing.JButton btn_dtpembeli;
    private javax.swing.JButton btn_dtsupplier;
    private javax.swing.JButton btn_findrangetgl;
    private javax.swing.JButton btn_findtgl;
    private javax.swing.JButton btn_harisekarang;
    private javax.swing.JButton btn_laporansaja;
    private javax.swing.JButton btn_logout;
    private javax.swing.JButton btn_transbeli;
    private javax.swing.JButton btn_transjual;
    private javax.swing.JComboBox<String> combobox_bulan;
    private javax.swing.JComboBox<String> combobox_tahun;
    private com.toedter.calendar.JDateChooser datechooserakhir;
    private com.toedter.calendar.JDateChooser datechooserawal;
    private com.toedter.calendar.JDateChooser datechooserfix;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel label_nama;
    private javax.swing.JLabel label_namacus;
    private javax.swing.JLabel label_namacusbulan;
    private javax.swing.JPanel panelAnalisisHasil;
    private javax.swing.JPanel panelLineChart;
    private javax.swing.JPanel panelLineIntensity;
    private javax.swing.JTable tabel_bulcatatantrans;
    private javax.swing.JTable tabel_buldetail;
    private javax.swing.JTable tabel_catatantrans;
    private javax.swing.JTable tabel_detailtrans;
    // End of variables declaration//GEN-END:variables
}
